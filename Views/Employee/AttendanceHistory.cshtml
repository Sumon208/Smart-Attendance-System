@model IEnumerable<Smart_Attendance_System.Models.Attendance>

@{
    ViewData["Title"] = "Attendance History";
    Layout = "_EmployeeLayout";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-chart-bar text-primary"></i> Attendance History</h2>
    <div>
        <a asp-action="Attendance" class="btn btn-primary">
            <i class="fas fa-clock mr-2"></i>Mark Attendance
        </a>
    </div>
</div>

<!-- Statistics Summary -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-white bg-success text-center card-custom">
            <div class="card-body">
                <i class="fas fa-user-check fa-2x mb-2"></i>
                <h3>@(Model?.Count(a => a.Status == "Present") ?? 0)</h3>
                <h6>Present Days</h6>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-danger text-center card-custom">
            <div class="card-body">
                <i class="fas fa-user-times fa-2x mb-2"></i>
                <h3>@(Model?.Count(a => a.Status == "Absent") ?? 0)</h3>
                <h6>Absent Days</h6>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-warning text-center card-custom">
            <div class="card-body">
                <i class="fas fa-clock fa-2x mb-2"></i>
                <h3>@(Model?.Count(a => a.Status == "Late") ?? 0)</h3>
                <h6>Late Arrivals</h6>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-info text-center card-custom">
            <div class="card-body">
                <i class="fas fa-percentage fa-2x mb-2"></i>
                <h3>
                    @{
                        var totalDays = Model?.Count() ?? 0;
                        var presentDays = Model?.Count(a => a.Status == "Present") ?? 0;
                        var attendanceRate = totalDays > 0 ? Math.Round((double)presentDays / totalDays * 100, 1) : 0;
                    }
                    @attendanceRate%
                </h3>
                <h6>Attendance Rate</h6>
            </div>
        </div>
    </div>
</div>

<!-- Monthly Overview Chart -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card card-custom">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="fas fa-chart-line mr-2"></i>Monthly Attendance Overview</h5>
            </div>
            <div class="card-body">
                <canvas id="attendanceChart" width="400" height="100"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Attendance History Table -->
<div class="card card-custom">
    <div class="card-header bg-secondary text-white">
        <h5 class="mb-0"><i class="fas fa-list mr-2"></i>Attendance Records</h5>
    </div>
    <div class="card-body">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover" id="attendanceTable">
                    <thead class="thead-light">
                        <tr>
                            <th>Date</th>
                            <th>Day</th>
                            <th>Check In</th>
                            <th>Check Out</th>
                            <th>Working Hours</th>
                            <th>Status</th>
                            <th>Notes</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var attendance in Model.OrderByDescending(a => a.AttendanceDate))
                        {
                            <tr>
                                <td>@attendance.AttendanceDate.ToString("MMM dd, yyyy")</td>
                                <td>@attendance.AttendanceDate.ToString("ddd")</td>
                                <td>
                                    @if (attendance.CheckInTime.HasValue)
                                    {
                                        <span class="text-success">
                                            <i class="fas fa-sign-in-alt mr-1"></i>
                                            @attendance.CheckInTime.Value.ToString("HH:mm")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    @if (attendance.CheckOutTime.HasValue)
                                    {
                                        <span class="text-danger">
                                            <i class="fas fa-sign-out-alt mr-1"></i>
                                            @attendance.CheckOutTime.Value.ToString("HH:mm")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    @if (attendance.CheckInTime.HasValue && attendance.CheckOutTime.HasValue)
                                    {
                                        var hours = (attendance.CheckOutTime.Value - attendance.CheckInTime.Value).TotalHours;
                                        var hoursText = hours >= 1 ? $"{hours:F1} hrs" : $"{hours * 60:F0} min";
                                        <span class="text-info">
                                            <i class="fas fa-clock mr-1"></i>
                                            @hoursText
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge badge-@GetStatusBadgeClass(attendance.Status)">
                                        @attendance.Status
                                    </span>
                                </td>
                                <td>
                                    @if (attendance.Status == "Late")
                                    {
                                        <small class="text-warning">
                                            <i class="fas fa-exclamation-triangle mr-1"></i>
                                            Late arrival
                                        </small>
                                    }
                                    else if (attendance.Status == "Absent")
                                    {
                                        <small class="text-danger">
                                            <i class="fas fa-times-circle mr-1"></i>
                                            No attendance
                                        </small>
                                    }
                                    else
                                    {
                                        <small class="text-success">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            On time
                                        </small>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No Attendance Records Found</h5>
                <p class="text-muted">Your attendance history will appear here once you start marking attendance.</p>
                <a asp-action="Attendance" class="btn btn-primary">
                    <i class="fas fa-clock mr-2"></i>Mark Today's Attendance
                </a>
            </div>
        }
    </div>
</div>

<!-- Filter and Export Options -->
<div class="row mt-4">
    <div class="col-md-6">
        <div class="card card-custom">
            <div class="card-header bg-light">
                <h6 class="mb-0"><i class="fas fa-filter mr-2"></i>Filter Options</h6>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label>Status Filter</label>
                    <select class="form-control" id="statusFilter">
                        <option value="">All Statuses</option>
                        <option value="Present">Present</option>
                        <option value="Absent">Absent</option>
                        <option value="Late">Late</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Month Filter</label>
                    <select class="form-control" id="monthFilter">
                        <option value="">All Months</option>
                        <option value="1">January</option>
                        <option value="2">February</option>
                        <option value="3">March</option>
                        <option value="4">April</option>
                        <option value="5">May</option>
                        <option value="6">June</option>
                        <option value="7">July</option>
                        <option value="8">August</option>
                        <option value="9">September</option>
                        <option value="10">October</option>
                        <option value="11">November</option>
                        <option value="12">December</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card card-custom">
            <div class="card-header bg-light">
                <h6 class="mb-0"><i class="fas fa-download mr-2"></i>Export Options</h6>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label>Date Range</label>
                    <div class="row">
                        <div class="col-6">
                            <input type="date" class="form-control" id="exportStartDate" placeholder="From">
                        </div>
                        <div class="col-6">
                            <input type="date" class="form-control" id="exportEndDate" placeholder="To">
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <button class="btn btn-success btn-block" onclick="exportAttendance()">
                        <i class="fas fa-file-excel mr-2"></i>Export to Excel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card-custom {
        border: none;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .table th {
        border-top: none;
        font-weight: 600;
        background-color: #f8f9fa;
    }
    
    .badge {
        font-size: 0.8rem;
        padding: 0.4rem 0.6rem;
    }
    
    .chart-container {
        position: relative;
        height: 300px;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    $(document).ready(function() {
        // Initialize DataTable
        var table = $('#attendanceTable').DataTable({
            pageLength: 15,
            order: [[0, 'desc']], // Sort by date descending
            responsive: true,
            language: {
                search: "Search:",
                lengthMenu: "Show _MENU_ entries per page",
                info: "Showing _START_ to _END_ of _TOTAL_ entries",
                paginate: {
                    first: "First",
                    last: "Last",
                    next: "Next",
                    previous: "Previous"
                }
            }
        });
        
        // Status filter
        $('#statusFilter').change(function() {
            var status = $(this).val();
            table.column(5).search(status).draw();
        });
        
        // Month filter
        $('#monthFilter').change(function() {
            var month = $(this).val();
            if (month) {
                // Custom month filtering logic
                $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
                    var date = new Date(data[0]);
                    return date.getMonth() + 1 == month;
                });
            } else {
                $.fn.dataTable.ext.search.pop();
            }
            table.draw();
        });
        
        // Initialize attendance chart
        initializeAttendanceChart();
    });
    
    function initializeAttendanceChart() {
        var ctx = document.getElementById('attendanceChart').getContext('2d');
        
        // Sample data - replace with actual data from your model
        var chartData = {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
            datasets: [{
                label: 'Present Days',
                data: [22, 20, 23, 21, 22, 20],
                backgroundColor: 'rgba(40, 167, 69, 0.2)',
                borderColor: 'rgba(40, 167, 69, 1)',
                borderWidth: 2
            }, {
                label: 'Absent Days',
                data: [3, 5, 2, 4, 3, 5],
                backgroundColor: 'rgba(220, 53, 69, 0.2)',
                borderColor: 'rgba(220, 53, 69, 1)',
                borderWidth: 2
            }, {
                label: 'Late Days',
                data: [2, 1, 3, 2, 1, 2],
                backgroundColor: 'rgba(255, 193, 7, 0.2)',
                borderColor: 'rgba(255, 193, 7, 1)',
                borderWidth: 2
            }]
        };
        
        var attendanceChart = new Chart(ctx, {
            type: 'line',
            data: chartData,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 25
                    }
                },
                plugins: {
                    legend: {
                        position: 'top',
                    }
                }
            }
        });
    }
    
    function exportAttendance() {
        var startDate = $('#exportStartDate').val();
        var endDate = $('#exportEndDate').val();
        
        if (!startDate || !endDate) {
            alert('Please select both start and end dates for export.');
            return;
        }
        
        // TODO: Implement actual export functionality
        alert('Export functionality will be implemented. Date range: ' + startDate + ' to ' + endDate);
    }
</script>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Present" => "success",
            "Absent" => "danger",
            "Late" => "warning",
            _ => "secondary"
        };
    }
}
