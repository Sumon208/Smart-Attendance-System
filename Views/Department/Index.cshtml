@model IEnumerable<Smart_Attendance_System.Models.Department>

@{
    ViewData["Title"] = "Department Management";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="fas fa-building"></i> Department Information
        </h2>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <!-- Left card: Create Department -->
        <div class="col-12 col-md-6">
            <div class="card mb-4">
                <div class="card-header bg-primary text-dark">
                    <h5 class="mb-0"><i class="fas fa-bug"></i> Department Create</h5>
                </div>
                <div class="card-body">
                    <form method="post" action="@Url.Action("Create", "Department")">
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label for="testDepartmentName" class="form-label">Department Name:</label>
                                    <input type="text" id="testDepartmentName" name="DepartmentName" class="form-control" required />
                                </div>
                            </div>
                            <div class="col-12 mt-3">
                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-plus"></i> Add Department
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Right card: All Departments -->
        <div class="col-12 col-md-6">
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-list"></i> All Departments</h5>
                </div>
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover" id="departmentsTable">
                                <thead class="table-dark">
                                    <tr>
                                        <th>ID</th>
                                        <th>Department Name</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@item.DepartmentId</td>
                                            <td>@item.DepartmentName</td>
                                            <td>
                                                <a asp-action="Details" asp-route-id="@item.DepartmentId" class="btn btn-sm btn-info me-1" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@item.DepartmentId" class="btn btn-sm btn-warning me-1" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <form asp-action="Delete" asp-route-id="@item.DepartmentId" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-sm btn-danger" title="Delete"
                                                            onclick="return confirm('Are you sure you want to delete this department?');">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </form>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-building fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No departments found</h5>
                            <p class="text-muted">Start by adding your first department.</p>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addDepartmentModal">
                                <i class="fas fa-plus"></i> Add First Department
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Add Department Modal -->
<div class="modal fade" id="addDepartmentModal" tabindex="-1" aria-labelledby="addDepartmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addDepartmentModalLabel">Add New Department</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addDepartmentForm" asp-action="Create" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="form-group mb-3">
                        <label for="DepartmentName" class="form-label fw-bold">Department Name</label>
                        <input type="text" id="DepartmentName" name="DepartmentName" class="form-control" 
                               placeholder="Enter department name" 
                               required maxlength="100" minlength="2" 
                               pattern="[A-Za-z\s]+" 
                               title="Please enter a valid department name (letters and spaces only)" />
                        <div class="form-text">
                            <i class="fas fa-info-circle"></i> Enter a unique department name (2-100 characters, letters and spaces only)
                        </div>
                        <span class="text-danger field-validation-error" data-valmsg-for="DepartmentName"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Add Department
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            $('#departmentsTable').DataTable({
                "pageLength": 10,
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                "order": [[1, "asc"]], // Sort by department name
                "language": {
                    "search": "Search departments:",
                    "lengthMenu": "Show _MENU_ departments per page",
                    "info": "Showing _START_ to _END_ of _TOTAL_ departments"
                }
            });

            // Auto-hide alerts after 5 seconds
            setTimeout(function() {
                $('.alert').fadeOut('slow');
            }, 5000);

            // Add Department Form Handling
            $('#addDepartmentForm').on('submit', function(e) {
                e.preventDefault();
                
                var departmentName = $('#DepartmentName').val().trim();
                if (departmentName.length < 2) {
                    alert('Please enter a valid department name (minimum 2 characters)');
                    $('#DepartmentName').focus();
                    return false;
                }

                // Submit form via AJAX
                console.log('Submitting form...');
                console.log('Form data:', $(this).serialize());
                
                // Get anti-forgery token
                var token = $('input[name="__RequestVerificationToken"]').val();
                
                $.ajax({
                    url: '@Url.Action("Create", "Department")',
                    type: 'POST',
                    data: $(this).serialize() + '&__RequestVerificationToken=' + token,
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function(response) {
                        console.log('Response received:', response);
                        if (response.success) {
                            // Show success message
                            showAlert('success', response.message || 'Department added successfully!');
                            
                            // Close modal
                            $('#addDepartmentModal').modal('hide');
                            
                            // Reset form
                            $('#addDepartmentForm')[0].reset();
                            
                            // Reload page to show new department
                            setTimeout(function() {
                                location.reload();
                            }, 1000);
                        } else {
                            showAlert('danger', response.message || 'Failed to add department');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.log('Error occurred:', error);
                        console.log('Status:', status);
                        console.log('Response:', xhr.responseText);
                        showAlert('danger', 'An error occurred while adding department: ' + error);
                    }
                });
            });

            // Form validation enhancement
            $('#DepartmentName').on('input', function() {
                var value = $(this).val();
                var isValid = value.length >= 2 && value.length <= 100 && /^[A-Za-z\s]+$/.test(value);
                
                if (isValid) {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                    $(this).next('.form-text').removeClass('text-danger').addClass('text-success');
                } else {
                    $(this).removeClass('is-valid').addClass('is-invalid');
                    $(this).next('.form-text').removeClass('text-success').addClass('text-danger');
                }
            });

            // Real-time name existence check
            var nameCheckTimer;
            $('#DepartmentName').on('input', function() {
                clearTimeout(nameCheckTimer);
                var departmentName = $(this).val().trim();
                
                if (departmentName.length >= 2) {
                    nameCheckTimer = setTimeout(function() {
                        checkDepartmentNameExists(departmentName);
                    }, 500);
                }
            });

            function checkDepartmentNameExists(name) {
                $.post('@Url.Action("CheckNameExists", "Department")', { departmentName: name })
                    .done(function(data) {
                        if (data.exists) {
                            $('#DepartmentName').addClass('is-invalid');
                            if (!$('#nameExistsError').length) {
                                $('#DepartmentName').after('<div id="nameExistsError" class="text-danger mt-1"><i class="fas fa-exclamation-triangle"></i> This department name already exists.</div>');
                            }
                        } else {
                            $('#DepartmentName').removeClass('is-invalid');
                            $('#nameExistsError').remove();
                        }
                    });
            }

            function showAlert(type, message) {
                var alertHtml = '<div class="alert alert-' + type + ' alert-dismissible fade show" role="alert">' +
                               '<i class="fas fa-' + (type === 'success' ? 'check-circle' : 'exclamation-triangle') + '"></i> ' + message +
                               '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                               '</div>';
                
                // Remove existing alerts
                $('.alert').remove();
                
                // Add new alert at the top
                $('.container-fluid').prepend(alertHtml);
                
                // Auto-hide after 5 seconds
                setTimeout(function() {
                    $('.alert').fadeOut('slow');
                }, 5000);
            }
        });
    </script>
}

