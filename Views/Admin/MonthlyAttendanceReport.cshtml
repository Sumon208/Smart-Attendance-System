@model Smart_Attendance_System.Models.ViewModel.MonthlyAttendanceReportViewModel

@{
    ViewData["Title"] = "Monthly Attendance Report";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">
                    <i class="fas fa-calendar-alt text-primary mr-2"></i>
                    Monthly Attendance Report
                </h2>
                <div class="text-muted">
                    <small>Generated on @DateTime.Now.ToString("MMMM dd, yyyy 'at' HH:mm")</small>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-search mr-2"></i>
                        Search & Filter Options
                    </h5>
                </div>
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-md-4">
                            <label for="employeeSearch" class="form-label">
                                <i class="fas fa-user mr-1"></i>
                                Search by Employee Name/ID
                            </label>
                            <input type="text"
                                   class="form-control"
                                   id="employeeSearch"
                                   name="employeeSearch"
                                   value="@Model.EmployeeSearch"
                                   placeholder="Enter name or employee ID...">
                        </div>
                        <div class="col-md-3">
                            <label for="dateFrom" class="form-label">
                                <i class="fas fa-calendar-day mr-1"></i>
                                Date From
                            </label>
                            <input type="date"
                                   class="form-control"
                                   id="dateFrom"
                                   name="dateFrom"
                                   value="@Model.DateFrom">
                        </div>
                        <div class="col-md-3">
                            <label for="dateTo" class="form-label">
                                <i class="fas fa-calendar-day mr-1"></i>
                                Date To
                            </label>
                            <input type="date"
                                   class="form-control"
                                   id="dateTo"
                                   name="dateTo"
                                   value="@Model.DateTo">
                        </div>
                        <div class="col-md-2 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fas fa-search mr-1"></i>
                                Search
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card">
                <div class="card-header bg-dark text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-table mr-2"></i>
                        Attendance Details
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Attendances.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>Employee</th>
                                        <th>Employee ID</th>
                                        <th>Department</th>
                                        <th>Date</th>
                                        <th>Day</th>
                                        <th>Check In</th>
                                        <th>Check Out</th>
                                        <th>Working Hours</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var attendance in Model.Attendances)
                                    {
                                        var empName = (attendance.Employee?.EmployeeName ?? "Unknown");
                                        var empId = (attendance.Employee?.EmployeeId ?? "N/A");
                                        var isoDate = attendance.AttendanceDate.ToString("yyyy-MM-dd");

                                        <tr data-employee="@empName.ToLowerInvariant()"
                                            data-empid="@empId.ToLowerInvariant()"
                                            data-date="@isoDate">
                                            <td><strong>@empName</strong></td>
                                            <td><span class="badge badge-secondary">@empId</span></td>
                                            <td><span class="text-muted">@(attendance.Employee?.Department?.DepartmentName ?? "N/A")</span></td>
                                            <td>@attendance.AttendanceDate.ToString("MMM dd, yyyy")</td>
                                            <td>@attendance.AttendanceDate.ToString("ddd")</td>
                                            <td>@(attendance.CheckInTime?.ToString("HH:mm") ?? "—")</td>
                                            <td>@(attendance.CheckOutTime?.ToString("HH:mm") ?? "—")</td>
                                            <td>
                                                @(attendance.CheckInTime.HasValue && attendance.CheckOutTime.HasValue
                                                                                        ? (attendance.CheckOutTime.Value - attendance.CheckInTime.Value).TotalHours.ToString("F1") + "h"
                                                                                        : "—")
                                    </td>
                                    <td>
                                        @{
                                                    var statusClass = attendance.Status switch
                                                    {
                                                        "Present" => "badge-success",
                                                        "Late" => "badge-warning",
                                                        "Absent" => "badge-danger",
                                                        _ => "badge-secondary"
                                                    };
                                                }
                                                <span class="badge @statusClass">@attendance.Status</span>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-info view-attendance-btn"
                                                        data-employeeid="@attendance.EmployeeId"
                                                        data-employee="@empName">
                                                    <i class="fas fa-eye"></i> View
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-search fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No attendance records found</h5>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="employeeAttendanceModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalLabel">Attendance History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-header">
                <button id="downloadModalPdf" class="btn btn-danger">
                    <i class="fas fa-file-pdf"></i> Download PDF
                </button>
                <button id="printModalBtn" class="btn btn-info">
                    <i class="fas fa-print"></i> Print
                </button>
            </div>

            <div class="modal-body" id="modalContent">
                <div class="text-center py-3">
                    <span class="spinner-border text-primary"></span>
                    <p>Loading...</p>
                </div>
            </div>

        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
    <script>
        const qa = s => Array.from(document.querySelectorAll(s));
        const q = s => document.querySelector(s);

        const modal = new bootstrap.Modal(q('#employeeAttendanceModal'));
        const modalContent = q('#modalContent');
        const modalTitle = q('#modalLabel');

        function calculateTotals() {
            const table = modalContent.querySelector('table');
            if(!table) return;
            const rows = table.querySelectorAll('tbody tr');
            let present=0, late=0, absent=0;
            rows.forEach(r=>{
                const status = r.cells[5].innerText.trim();
                if(status==='Present') present++;
                else if(status==='Late') late++;
                else if(status==='Absent') absent++;
            });
            const totalPresentEl = table.querySelector('#totalPresent');
            const totalLateEl = table.querySelector('#totalLate');
            const totalAbsentEl = table.querySelector('#totalAbsent');
            if(totalPresentEl) totalPresentEl.innerText = present;
            if(totalLateEl) totalLateEl.innerText = late;
            if(totalAbsentEl) totalAbsentEl.innerText = absent;
        }

        qa('.view-attendance-btn').forEach(btn=>{
            btn.addEventListener('click', async function(){
                const empId = this.getAttribute('data-employeeid');
                const empName = this.getAttribute('data-employee');
                modalTitle.textContent = `Attendance History - ${empName}`;
                modalContent.innerHTML = `<div class="text-center py-3"><span class="spinner-border text-primary"></span><p>Loading...</p></div>`;
                modal.show();
                try {
                    const response = await fetch(`@Url.Action("GetEmployeeMonthlyAttendance", "Admin")?employeeId=${empId}&dateFrom=@(Model.DateFrom)&dateTo=@(Model.DateTo)`);
                    if(!response.ok) throw new Error('Failed to fetch');
                    modalContent.innerHTML = await response.text();
                    calculateTotals();
                } catch(err){
                    modalContent.innerHTML = `<div class="text-danger text-center">Error loading data</div>`;
                    console.error(err);
                }
            });
        });

        // Download PDF button for Modal
        document.getElementById("downloadModalPdf").addEventListener("click", function () {
            var title = document.getElementById("modalLabel").innerText;
            var content = document.getElementById("modalContent");

            var element = document.createElement("div");
            element.innerHTML = `
                <h2 style="text-align:center; margin-bottom:20px; color:#2c3e50;">
                    ${title}
                </h2>
                ${content.innerHTML}
            `;

            var opt = {
                margin: 0.5,
                filename: `${title.replace(/\s+/g, '_')}.pdf`,
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'in', format: 'a4', orientation: 'landscape' }
            };

            html2pdf().set(opt).from(element).save();
        });

        // Print button for Modal
        document.getElementById("printModalBtn").addEventListener("click", function () {
            window.print();
        });
    </script>
}