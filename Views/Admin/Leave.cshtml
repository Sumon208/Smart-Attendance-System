@model IEnumerable<Smart_Attendance_System.Models.Leave>

@{
    ViewData["Title"] = "Leave Management";
    Layout = "_AdminLayout";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-calendar-check text-primary"></i> Leave Applications Management</h2>
    <div class="text-muted">
        <i class="far fa-calendar-alt"></i> @DateTime.Now.ToString("dddd, MMMM dd, yyyy")
    </div>
</div>

<!-- Statistics Summary -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-white bg-warning text-center">
            <div class="card-body">
                <i class="fas fa-hourglass-half fa-2x mb-2"></i>
                <h3>@Model?.Count(l => l.Status == LeaveStatus.Pending)</h3>
                <h6>Pending</h6>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-success text-center">
            <div class="card-body">
                <i class="fas fa-check-circle fa-2x mb-2"></i>
                <h3>@Model?.Count(l => l.Status == LeaveStatus.Approved)</h3>
                <h6>Approved</h6>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-danger text-center">
            <div class="card-body">
                <i class="fas fa-times-circle fa-2x mb-2"></i>
                <h3>@Model?.Count(l => l.Status == LeaveStatus.Rejected)</h3>
                <h6>Rejected</h6>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-info text-center">
            <div class="card-body">
                <i class="fas fa-calendar-alt fa-2x mb-2"></i>
                <h3>@Model?.Count()</h3>
                <h6>Total</h6>
            </div>
        </div>
    </div>
</div>

<!-- Leave Applications Table -->
<div class="card shadow">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0"><i class="fas fa-list mr-2"></i>Leave Applications</h5>
    </div>
    <div class="card-body">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover" id="leaveTable">
                    <thead class="thead-dark">
                        <tr>
                            <th>Employee</th>
                            <th>Department</th>
                            <th>Leave Type</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Duration</th>
                            <th>Reason</th>
                            <th>Status</th>
                            <th>Applied On</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderByDescending(l => l.StartDate))
                        {
                            <tr>
                                <td>
                                    <div>
                                        <strong>@item.Employee?.EmployeeName</strong><br>
                                        <small class="text-muted">@item.Employee?.EmployeeId</small>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <strong>@item.Employee?.Department?.DepartmentName</strong><br>   
                                    </div>
                                </td>
                                <td>
                                    <span class="badge badge-@GetLeaveTypeBadgeClass(item.LeaveType)">
                                        @item.LeaveType
                                    </span>
                                </td>
                                <td>@item.StartDate.ToString("MMM dd, yyyy")</td>
                                <td>@item.EndDate.ToString("MMM dd, yyyy")</td>
                                <td>
                                    @{
                                        var duration = (item.EndDate - item.StartDate).Days + 1;
                                        var durationText = duration == 1 ? "1 day" : $"{duration} days";
                                    }
                                    @durationText
                                </td>
                                <td>
                                    <span class="text-truncate d-inline-block" style="max-width: 200px;" title="@item.Reason">
                                        @item.Reason
                                    </span>
                                </td>
                                <td>
                                    <span class="badge badge-@GetStatusBadgeClass(item.Status)">
                                        @item.Status
                                    </span>
                                </td>
                                <td>@item.StartDate.ToString("MMM dd, yyyy")</td>
                                <td>
                                    @if (item.Status == LeaveStatus.Pending)
                                    {
                                        <div class="btn-group" role="group">
                                            <!-- Approve -->
                                            <form asp-action="ApproveLeave" method="post" style="display:inline;">
                                                <input type="hidden" name="leaveId" value="@item.LeaveId" />
                                                <button type="submit" class="btn btn-sm btn-success" onclick="return confirm('Approve this leave request?')">
                                                    <i class="fas fa-check"></i> Approve
                                                </button>
                                            </form>

                                            <!-- Reject -->
                                            <form asp-action="RejectLeave" method="post" style="display:inline;">
                                                <input type="hidden" name="leaveId" value="@item.LeaveId" />
                                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Reject this leave request?')">
                                                    <i class="fas fa-times"></i> Reject
                                                </button>
                                            </form>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No Leave Applications Found</h5>
                <p class="text-muted">There are no leave applications to review at this time.</p>
            </div>
        }
    </div>
</div>

<style>
    .badge {
        font-size: 0.8rem;
        padding: 0.4rem 0.6rem;
        font-weight: 500;
        letter-spacing: 0.5px;
    }
    
    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }
    
    .table th {
        border-top: none;
        font-weight: 600;
        background-color: #343a40;
        color: white;
    }
    
    /* Table enhancements */
    .table-hover tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.05);
        transition: all 0.2s ease;
    }
</style>

<script>
    $(document).ready(function() {
        // Initialize DataTable
        $('#leaveTable').DataTable({
            pageLength: 25,
            order: [[3, 'desc']], // Sort by start date descending
            responsive: true,
            language: {
                search: "Search:",
                lengthMenu: "Show _MENU_ entries per page",
                info: "Showing _START_ to _END_ of _TOTAL_ entries",
                paginate: {
                    first: "First",
                    last: "Last",
                    next: "Next",
                    previous: "Previous"
                }
            }
        });
    });
</script>

@functions {
    private string GetStatusBadgeClass(LeaveStatus status)
    {
        return status switch
        {
            LeaveStatus.Pending => "warning",
            LeaveStatus.Approved => "success",
            LeaveStatus.Rejected => "danger",
            _ => "secondary"
        };
    }
    
    private string GetLeaveTypeBadgeClass(string? leaveType)
    {
        if (string.IsNullOrEmpty(leaveType))
            return "secondary";
            
        return leaveType switch
        {
            "Annual" => "primary",
            "Sick" => "success",
            "Personal" => "info",
            "Maternity" => "warning",
            "Paternity" => "secondary",
            "Other" => "dark",
            _ => "secondary"
        };
    }
}